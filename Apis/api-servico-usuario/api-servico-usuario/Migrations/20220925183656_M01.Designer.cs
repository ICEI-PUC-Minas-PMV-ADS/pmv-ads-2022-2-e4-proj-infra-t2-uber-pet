// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api_servico_usuario.Models;

#nullable disable

namespace api_servico_usuario.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220925183656_M01")]
    partial class M01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("api_servico_usuario.Models.LinkDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Href")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metodo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PassageiroIdPassageiro")
                        .HasColumnType("int");

                    b.Property<int?>("PetIdPet")
                        .HasColumnType("int");

                    b.Property<string>("Rel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PassageiroIdPassageiro");

                    b.HasIndex("PetIdPet");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("LinkDto");
                });

            modelBuilder.Entity("api_servico_usuario.Models.Passageiro", b =>
                {
                    b.Property<int>("IdPassageiro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPassageiro"), 1L, 1);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuarioForeignKey")
                        .HasColumnType("int");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPassageiro");

                    b.HasIndex("IdUsuarioForeignKey")
                        .IsUnique();

                    b.ToTable("Passageiros");
                });

            modelBuilder.Entity("api_servico_usuario.Models.Pet", b =>
                {
                    b.Property<int>("IdPet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPet"), 1L, 1);

                    b.Property<int>("Animal")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PassageiroId")
                        .HasColumnType("int");

                    b.Property<int>("Porte")
                        .HasColumnType("int");

                    b.HasKey("IdPet");

                    b.HasIndex("PassageiroId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("api_servico_usuario.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("api_servico_usuario.Models.LinkDto", b =>
                {
                    b.HasOne("api_servico_usuario.Models.Passageiro", null)
                        .WithMany("Links")
                        .HasForeignKey("PassageiroIdPassageiro");

                    b.HasOne("api_servico_usuario.Models.Pet", null)
                        .WithMany("Links")
                        .HasForeignKey("PetIdPet");

                    b.HasOne("api_servico_usuario.Models.Usuario", null)
                        .WithMany("Links")
                        .HasForeignKey("UsuarioIdUsuario");
                });

            modelBuilder.Entity("api_servico_usuario.Models.Passageiro", b =>
                {
                    b.HasOne("api_servico_usuario.Models.Usuario", "Usuario")
                        .WithOne("Passageiro")
                        .HasForeignKey("api_servico_usuario.Models.Passageiro", "IdUsuarioForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("api_servico_usuario.Models.Pet", b =>
                {
                    b.HasOne("api_servico_usuario.Models.Passageiro", "Passageiro")
                        .WithMany("Pets")
                        .HasForeignKey("PassageiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Passageiro");
                });

            modelBuilder.Entity("api_servico_usuario.Models.Passageiro", b =>
                {
                    b.Navigation("Links");

                    b.Navigation("Pets");
                });

            modelBuilder.Entity("api_servico_usuario.Models.Pet", b =>
                {
                    b.Navigation("Links");
                });

            modelBuilder.Entity("api_servico_usuario.Models.Usuario", b =>
                {
                    b.Navigation("Links");

                    b.Navigation("Passageiro");
                });
#pragma warning restore 612, 618
        }
    }
}
